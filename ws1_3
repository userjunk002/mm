import matplotlib.pyplot as plt
import math as m
import operator as op
from functools import reduce
import scipy.stats as stats
from statistics import mean
from pprint import pprint

def forward_diff_table(arr, ans, n):
  temp = []

  for i in range(1, n):
    temp.append(arr[i] - arr[i-1])

  ans.append(temp)
  ans

  while len(ans[-1]) > 1:
    temp = []

    for i in range(1, len(ans[-1])):
      temp.append(ans[-1][i] - ans[-1][i-1])

    ans.append(temp)

  return ans
  
def ncr(n, r):
  val = 1

  for i in range(r):
    val *= (n - i)

  if r == 1:
    return val

  a = val / m.factorial(r)
  
  return a
  
def forward_interpolation(y_0, n, ans, u):
  val = y_0

  for i in range(n):
    val += ncr(u, i+1) * ans[i][0]

  return val
  
n = [i for i in range(1, 17)]
an = [3, 6, 11, 21, 32, 47, 65, 87, 112, 110, 171, 204, 241, 282, 325, 376]       
length = len(an)
ans = forward_diff_table(an, [], length)

k = 1

for i in ans:
  plt.plot(i, label = "diff - " + str(k))
  k += 1

plt.legend()

plt.plot(ans[0])

def function_interpolation(x, x0, h, ans, length, y):
  u = (x - x0) / h  
  print(u)
  return forward_interpolation(y[0], length, ans, u)

error = []
x0 = n[0]
h = 1

for i in range(len(an)):
  u = (n[i] - x0) / h  
  y_hat = forward_interpolation(an[0], len(ans), ans, u)
  error.append(an[i] - y_hat)

error

plt.plot(error)
