def proterm(i, value, x):
	pro = 1;
	for j in range(i):
		pro = pro * (value - x[j]);
	return pro;

def dividedDiffTable(x, y, n):
	for i in range(1, n):
		for j in range(n - i):
			y[j][i] = ((y[j][i - 1] - y[j + 1][i - 1]) / (x[j] - x[i + j]));
	return y;

def applyFormula(value, x, y, n):
	sum = y[0][0];
	for i in range(1, n):
		sum = sum + (proterm(i, value, x) * y[0][i]);
	return sum;

def printDiffTable(y, n):
	for i in range(n):
		for j in range(n - i):
			print(round(y[i][j], 4), "\t",end = " ");
		print("");

n = 8;
x = [0,1,2,5.5,11,13,16,18];
actualY=[0.5,3.137,5.3,9.9,10.2,9.35,7.2,6.2]
y = [[0 for i in range(10)]
		for j in range(10)];
for i in range(n):
    y[i][0]=actualY[i]
# y[0][0] = 12;
# y[1][0] = 13;

y=dividedDiffTable(x, y, n);
printDiffTable(y, n);
value = 0.5;
print("\nValue at", value, "is",round(applyFormula(value, x, y, n), 2))
value = 3;
print("\nValue at", value, "is",round(applyFormula(value, x, y, n), 2))
